/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.5).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Challenge;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-06-26T16:01:14.232Z")

@Api(value = "challenge", description = "the challenge API")
public interface ChallengeApi {

    @ApiOperation(value = "Finds challenge by category", nickname = "findChallengeByCategory", notes = "Multiple status values can be provided with comma separated strings", response = Challenge.class, responseContainer = "List", tags={ "challenge", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Challenge.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Invalid status value") })
    @RequestMapping(value = "/challenge/findByCategory",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Challenge>> findChallengeByCategory(@NotNull @ApiParam(value = "Status values that need to be considered for filter", required = true, allowableValues = "beginner, intermediate, advanced") @Valid @RequestParam(value = "category", required = true) List<String> category);


    @ApiOperation(value = "Finds Challenge by title", nickname = "findChallengeByTitle", notes = "", response = Challenge.class, responseContainer = "List", tags={ "challenge", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Challenge.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Invalid tag value") })
    @RequestMapping(value = "/challenge/findByTitle",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Challenge>> findChallengeByTitle(@NotNull @ApiParam(value = "challenge title", required = true) @Valid @RequestParam(value = "title", required = true) String title);

}
